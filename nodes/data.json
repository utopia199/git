{"css":[{"id":1,"body":"<h1 id=\"a2\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-1. 变量声明;</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">sass</code>变量的声明和<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>属性的声明很像：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">$highlight-color: #F90;</code></pre>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">这意味着变量<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">$highlight-color</code>现在的值是<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">#F90</code>。任何可以用作<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>属性值的赋值都 可以用作<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">sass</code>的变量值，甚至是以空格分割的多个属性值，如<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">$basic-border: 1px solid black;</code>，或以逗号分割的多个属性值，如<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">$plain-font: \"Myriad Pro\"、Myriad、\"Helvetica Neue\"、Helvetica、\"Liberation Sans\"、Arial和sans-serif; sans-serif;</code>。这时变 量还没有生效，除非你引用这个变量&mdash;&mdash;我们很快就会了解如何引用。</p>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">与<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">CSS</code>属性不同，变量可以在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>规则块定义之外存在。当变量定义在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>规则块内，那么该变量只能在此规则块内使用。如果它们出现在任何形式的<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">{...}</code>块中（如<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@media</code>或者<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@font-face</code>块），情况也是如此：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">$nav-color: #F90;\nnav {\n  $width: 100px;\n  width: $width;\n  color: $nav-color;\n}\n</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-2. 相邻组合选择器</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">你可以用同层相邻组合选择器<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">+</code>选择<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">header</code>元素后紧跟的<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">p</code>元素：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"css\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">header + p { font-size: 1.1em }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-3. 混合器</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">如果网站中有几处小小的样式类似（例如一致的颜色和字体），那么使用变量来统一处理这种情况是非常不错的选择。但是当你的样式变得越来越复杂，你需要大段大段的重用样式的代码，独立的变量就没办法应付这种情况了。</p>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">混合器使用<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@mixin</code>标识符定义。看上去很像其他的<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">CSS @</code>标识符，比如说<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@media</code>或者<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@font-face</code>。这个标识符给一大段样式赋予一个名字，这样你就可以轻易地通过引用这个名字重用这段样式。下边的这段<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">sass</code>代码</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">@mixin rounded-corners {\n  -moz-border-radius: 5px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n}</code></pre>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">然后就可以在你的样式表中通过<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@include</code>来使用这个混合器，放在你希望的任何地方。<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@include</code>调用会把混合器中的所有样式提取出来放在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@include</code>被调用的地方。如果像下边这样写：</p>\n<pre class=\"pre-bottom\" style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">notice {\n  @include rounded-corners;\n}\n</code></pre>\n<p><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">&nbsp;</code></p>\n<h1 id=\"e4\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-4. 给混合器传参;</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">混合器并不一定总得生成相同的样式。可以通过在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@include</code>混合器时给混合器传参，来定制混合器生成的精确样式。当<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@include</code>混合器时，参数其实就是可以赋值给<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>属性值的变量。如果你写过<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">JavaScript</code>，这种方式跟<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">JavaScript</code>的<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">function</code>很像：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">@mixin link-colors($normal, $hover, $visited) {\n  color: $normal;\n  &amp;:hover { color: $hover; }\n  &amp;:visited { color: $visited; }\n}</code></pre>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">当混合器被<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@include</code>时，你可以把它当作一个<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>函数来传参。如果你像下边这样写：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">a {\n  @include link-colors(blue, red, green);\n}\n</code></pre>\n<p><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">&nbsp;</code></p>\n<h1 id=\"e4\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-5. 继承;</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">使用<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">sass</code>的时候，最后一个减少重复的主要特性就是选择器继承。基于<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">Nicole Sullivan</code>面向对象的<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">css</code>的理念，选择器继承是说一个选择器可以继承为另一个选择器定义的所有样式。这个通过<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@extend</code>语法实现，如下代码:</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">//通过选择器继承继承样式\n.error {\n  border: 1px solid red;\n  background-color: #fdd;\n}\n.seriousError {\n  @extend .error;\n  border-width: 3px;\n}</code></pre>\n<h1 id=\"e4\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">2-1. 控制指令@if；</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 20px; font-size: 16px; line-height: 1.8em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">当&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@if</code>&nbsp;的表达式返回值不是&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">false</code>&nbsp;或者&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">null</code>&nbsp;时，条件成立，输出&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">{}</code>&nbsp;内的代码：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"lang-scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">p {\n  @if 1 + 1 == 2 { border: 1px solid; }\n  @if 5 &lt; 3 { border: 2px dotted; }\n  @if null  { border: 3px double; }\n}</code></pre>\n<p style=\"box-sizing: border-box; margin: 0px 0px 20px; font-size: 16px; line-height: 1.8em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@if</code>&nbsp;声明后面可以跟多个&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@else if</code>&nbsp;声明，或者一个&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@else</code>&nbsp;声明。如果&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@if</code>&nbsp;声明失败，Sass 将逐条执行&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@else if</code>&nbsp;声明，如果全部失败，最后执行&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@else</code>&nbsp;声明，例如：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"lang-scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">$type: monster;\np {\n  @if $type == ocean {\n    color: blue;\n  } @else if $type == matador {\n    color: red;\n  } @else if $type == monster {\n    color: green;\n  } @else {\n    color: black;\n  }\n}</code></pre>\n<h1 id=\"e4\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">2-2. 控制指令@for；</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 20px; font-size: 16px; line-height: 1.8em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@for</code>&nbsp;指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动。这个指令包含两种格式：<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@for $var from &lt;start&gt; through &lt;end&gt;</code>，或者&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@for $var from &lt;start&gt; to &lt;end&gt;</code>，区别在于&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">through</code>&nbsp;与&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">to</code>&nbsp;的含义：<em style=\"box-sizing: border-box;\">当使用&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">through</code>&nbsp;时，条件范围包含&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">&lt;start&gt;</code>&nbsp;与&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">&lt;end&gt;</code>&nbsp;的值，而使用&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">to</code>&nbsp;时条件范围只包含&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">&lt;start&gt;</code>&nbsp;的值不包含&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">&lt;end&gt;</code>&nbsp;的值</em>。另外，<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">$var</code>&nbsp;可以是任何变量，比如&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">$i</code>；<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">&lt;start&gt;</code>&nbsp;和&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">&lt;end&gt;</code>&nbsp;必须是整数值。</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"lang-scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">@for $i from 1 through 3 {\n  .item-#{$i} { width: 2em * $i; }\n}\n</code></pre>\n<p style=\"box-sizing: border-box; margin: 0px 0px 20px; font-size: 16px; line-height: 1.8em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">编译为</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"lang-css\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.item-1 {\n  width: 2em; }\n.item-2 {\n  width: 4em; }\n.item-3 {\n  width: 6em; }</code></pre>\n<h1 id=\"e4\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">2-3. 控制指令@while；</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 20px; font-size: 16px; line-height: 1.8em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@while</code>&nbsp;指令重复输出格式直到表达式返回结果为&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">false</code>。这样可以实现比&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14.4px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@for</code>&nbsp;更复杂的循环，只是很少会用到。例如：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"lang-scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">$i: 6;\n@while $i &gt; 0 {\n  .item-#{$i} { width: 2em * $i; }\n  $i: $i - 2;\n}\n</code></pre>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"lang-css\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.item-6 {\n  width: 12em; }\n\n.item-4 {\n  width: 8em; }\n\n.item-2 {\n  width: 4em; }</code></pre>\n<h1 id=\"e4\" class=\"title font anchor\" style=\"box-sizing: border-box; margin: 20px 0px 10px; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">2-4. 控制指令@each；</h1>\n<p style=\"box-sizing: border-box; margin: 0px 0px 10px; font-size: 18px; line-height: 2.2em; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@each</code>&nbsp;指令同样可以用于循环输出，和&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@for</code>&nbsp;的差别在于，<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@each</code>&nbsp;通过遍历&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">list</code>&nbsp;或者&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">map</code>&nbsp;实现循环输出：</p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">@each $usr in bob, john, bill, mike {\n    .#{$usr}-avatar {\n        background-image: url('/img/#{$usr}.png');\n     }\n}</code></pre>\n<p><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">@each</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">&nbsp;后面的&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">$usr</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">&nbsp;变量用于保存每次遍历到的元素，然后使用差值语法（</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">#{var}</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">）来拼接正确的图片路径，编译结果如下：</span></p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.bob-avatar {\n    background-image: url(\"/img/bob.png\");\n}\n\n.john-avatar {\n    background-image: url(\"/img/john.png\");\n}\n\n.bill-avatar {\n    background-image: url(\"/img/bill.png\");\n}\n\n.mike-avatar {\n    background-image: url(\"/img/mike.png\");\n}</code></pre>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">如果遍历的对象是一个&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">map</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">，那么我们就可以使用两个变量来存储元素的&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">key</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">&nbsp;和&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">value</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">，示例如下：</span></p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">$ppl: ( usr1:bob, usr2:john, usr3:bill, usr4:mike );\n\n@each $key, $usr in $ppl  {\n    .#{$usr}-avatar {\n        background-image: url('/img/#{$usr}.png');\n    }\n}</code></pre>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">此外，针对多个列表的遍历，我们也可以使用多个参数来保存相应的元素：</span></p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">$alt: alert, yellow, red;\n\n$sub: submit, white, green;\n\n$bck: back, blue, transparent;\n\n@each $type, $txt, $back in $alt,$sub,$bck {\n    .#{$type}-button {\n        color: $txt;\n        background-color: $back;\n    }\n}</code></pre>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">编译结果如下：</span></p>\n<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.alert-button {\n    color: yellow;\n    background-color: red;\n}\n\n.submit-button {\n    color: white;\n    background-color: green;\n}\n\n.back-button {\n    color: blue;\n    background-color: transparent;\n}</code></pre>\n<p><a href=\"https://www.sass.hk/\" target=\"_blank\" rel=\"noopener\">参考文档https://www.sass.hk/</a></p>"},{"id":2,"body":"<h1 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 26px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">Less语法</h1>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-1.&nbsp;无参数方法</h1>\n<p><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">要点：&ldquo;.&rdquo;与&ldquo;#&rdquo;都可以作为方法前缀。可以不适用小括号，但是为了避免css格式混淆，建议加上小括号&ldquo;（）&rdquo;。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.card(){\n//something....\n}\n#wrap{\n  .card();\n}</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-2.&nbsp;具体参数方法</h1>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.setSize(@width_size,@height_size){\n  width:@width_size;\n  height:@height_size;\n}</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-3.&nbsp;默认参数方法</h1>\n<p><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">Less 可以使用默认参数，如果没有传参数，那么将使用默认参数。 @arguments 犹如 JS 中的 arguments 指代的是全部参数。 传的参数中 必须带着单位。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">/* Less */\n      .border(@a:10px,@b:50px,@c:30px,@color:#000){\n          border:solid 1px @color;\n          box-shadow: @arguments;//指代的是 全部参数\n      }\n      #main{\n          .border(0px,5px,30px,red);//必须带着单位\n      }\n      #wrap{\n          .border(0px);\n      }\n      #content{\n        .border;//等价于 .border()\n      }\n    \n      /* 生成的 CSS */\n      #main{\n          border:solid 1px red;\n          box-shadow:0px,5px,30px,red;\n      }\n      #wrap{\n          border:solid 1px #000;\n          box-shadow: 0px 50px 30px #000;\n      }\n      #content{\n          border:solid 1px #000;\n          box-shadow: 10px 50px 30px #000;\n      }  </code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-4. 不定参</h1>\n<p><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">不确定参数的个数</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">.boxShadow(...){\n          box-shadow: @arguments;\n      }\n      .textShadow(@a,...){\n          text-shadow: @arguments;\n      }\n      #main{\n          .boxShadow(1px,4px,30px,red);\n          .textShadow(1px,4px,30px,red);\n      }\n      /* 生成后的 CSS */\n      #main{\n        box-shadow: 1px 4px 30px red;\n        text-shadow: 1px 4px 30px red;\n      }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-5.&nbsp;方法的匹配模式</h1>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">类似于多态。有点类似于switch case，同一个方法名的多个方法，由于传入的参数不同而实现不同的功能。</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\"> /* Less */\n      .triangle(top,@width:20px,@color:#000){\n          border-color:transparent  transparent @color transparent ;\n      }\n      .triangle(right,@width:20px,@color:#000){\n          border-color:transparent @color transparent  transparent ;\n      }\n    \n      .triangle(bottom,@width:20px,@color:#000){\n          border-color:@color transparent  transparent  transparent ;\n      }\n      .triangle(left,@width:20px,@color:#000){\n          border-color:transparent  transparent  transparent @color;\n      }\n      .triangle(@_,@width:20px,@color:#000){\n          border-style: solid;\n          border-width: @width;\n      }\n      #main{\n          .triangle(left, 50px, #999)\n      }\n      /* 生成的 CSS */\n      #main{\n        border-color:transparent  transparent  transparent #999;\n        border-style: solid;\n        border-width: 50px;\n      }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">2-1.&nbsp;条件语句</h1>\n<p><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">Less没有if / else 但是less具有一个when，and，not与&ldquo;，&rdquo;语法。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\"> /* Less */\n    #card{\n        // and 运算符 ，相当于 与运算 &amp;&amp;，必须条件全部符合才会执行\n        .border(@width,@color,@style) when (@width&gt;100px) and(@color=#999){\n            border:@style @color @width;\n        }\n        // not 运算符，相当于 非运算 !，条件为 不符合才会执行\n        .background(@color) when not (@color&gt;=#222){\n            background:@color;\n        }\n        // , 逗号分隔符：相当于 或运算 ||，只要有一个符合条件就会执行\n        .font(@size:20px) when (@size&gt;50px) , (@size&lt;100px){\n            font-size: @size;\n        }\n    }\n    #main{\n        #card&gt;.border(200px,#999,solid);\n        #card .background(#111);\n        #card &gt; .font(40px);\n    }\n    /* 生成后的 CSS */\n    #main{\n      border:solid #999 200px;\n      background:#111;\n      font-size:40px;\n    }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">2-2.&nbsp;循环语法</h1>\n<p><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">Less并没有提供一个for等循环的方法但是可以使用递归的方法实现。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\"> /* Less */\n      .generate-columns(4);\n      .generate-columns(@n, @i: 1) when (@i =&lt; @n) {\n        .column-@{i} {\n          width: (@i * 100% / @n);\n        }\n        .generate-columns(@n, (@i + 1));\n      }\n      /* 生成后的 CSS */\n      .column-1 {\n        width: 25%;\n      }\n      .column-2 {\n        width: 50%;\n      }\n      .column-3 {\n        width: 75%;\n      }\n      .column-4 {\n        width: 100%;\n      }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">3-1.&nbsp;继承</h1>\n<p><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">extend是less的一个</span><span style=\"box-sizing: border-box; font-weight: 600; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">伪类</span><span style=\"color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">。它可以继承所匹配声明中的全部样式。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">/* Less */\n      .animation{\n          transition: all .3s ease-out;\n          .hide{\n            transform:scale(0);\n          }\n      }\n      #main{\n          &amp;:extend(.animation);\n      }\n      #con{\n          &amp;:extend(.animation .hide);\n      }\n    \n      /* 生成后的 CSS */\n      .animation,#main{\n        transition: all .3s ease-out;\n      }\n      .animation .hide , #con{\n          transform:scale(0);\n      }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">3-2. all全局搜索替换</h1>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">/* Less */\n      #main{\n        width: 200px;\n      }\n      #main {\n        &amp;:after {\n          content:\"Less is good!\";\n        }\n      }\n      #wrap:extend(#main all) {}\n    \n      /* 生成的 CSS */\n      #main,#wrap{\n        width: 200px;\n      }\n      #main:after, #wrap:after {\n          content: \"Less is good!\";\n      }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">4-1. Less中使用js</h1>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">less本身是使用js实现的，所以在less中可以使用js。Js的代码写在字符串模板里<code style=\"box-sizing: border-box; font-size: 12px; font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace; padding: 2px 4px; border: none; vertical-align: middle; white-space: pre-wrap; color: #c7254e; background-color: #f2f2f2;\"></code>。</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\"> /* Less */\n      @content:`\"aaa\".toUpperCase()`;\n      #randomColor{\n        @randomColor: ~\"rgb(`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`)\";\n      }\n      #wrap{\n        width: ~\"`Math.round(Math.random() * 100)`px\";\n        &amp;:after{\n            content:@content;\n        }\n        height: ~\"`window.innerHeight`px\";\n        alert:~\"`alert(1)`\";\n        #randomColor();\n        background-color: @randomColor;\n      }\n      /* 生成后的 CSS */\n    \n      // 弹出 1\n      #wrap{\n        width: 随机值（0~100）px;\n        height: 743px;//由电脑而异\n        background: 随机颜色;\n      }\n      #wrap::after{\n        content:\"AAA\";\n      }</code></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">4-2. Less的函数</h1>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">Isnumber():判断是否为数字</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">Iscolor():判断是否是颜色</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">Isurl():判断是否是路径</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">saturate:增加一定数值的颜色饱和度</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">lighten:增加一定数值的颜色亮度</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">darken:降低一定数值的颜色亮度</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">fade:给颜色设置一定数值的透明度</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; word-break: break-word; color: #404040; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 16px; background-color: #ffffff;\">mix:根据比例混合两种颜色</p>\n<p><a title=\"https://www.jianshu.com/p/868d1bcbe12a\" href=\"https://www.jianshu.com/p/868d1bcbe12a\" target=\"_blank\" rel=\"noopener\">参考文档https://www.jianshu.com/p/868d1bcbe12a</a></p>"},{"id":3,"body":"Ios WebView下拉空白"},{"id":4,"body":"<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-1. 字体引用;</h1>\n<p>在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">body</code>里引入字体包<span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">：</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">@font-face{<br />   font-family:'oswald';<br />   src:url('..//fonts/oswald.regular.ttf')<br />}</span></pre>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: medium;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">引入这个字体</span><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">：</span></span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">.fontFail{<br />   font-family:'oswald';<br />}</span></pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-2. 字体填充颜色;</h1>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">改变字体颜色的同时可以实现渐变：</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">.fontFail{<br />   background:</span>linear-gradient(to right, red, blue);<br /><span style=\"white-space: pre-wrap;\">   </span>-webkit-background-clip:text;<br /><span style=\"white-space: pre-wrap;\">   color:</span>transparent;<span style=\"white-space: pre-wrap;\"><br /></span><span style=\"white-space: pre-wrap;\">}</span></pre>\n<p>&nbsp;</p>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-3.&nbsp;超出部分显示省略号;</h1>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">.fontFail{<br />   </span><span style=\"color: #333333; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 14px; white-space: pre-wrap;\">overflow: hidden;\n   ext-overflow:ellipsis;\n   white-space: nowrap;</span></span><span style=\"white-space: pre-wrap;\"><br /></span><span style=\"white-space: pre-wrap;\">}</span></pre>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: medium;\">在</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">body</code><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: medium;\">里引入字体包</span>：</span></p>"}],"js":[{"id":1,"body":"<h1 style=\"margin: 0px 0px 16px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; color: #404040; text-rendering: optimizelegibility; font-size: 26px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">数组排序</h1>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\">1、桶排序（桶中出现的数组元素都做个标记1，然后将桶数组中有1标记的元素依次打印）</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">//简单, 但是不用,浪费内存\nvar arr2=[];\nfor(var i=0;i&lt;arr.length;i++){\n    var key=arr[i];\n    arr2[key]=1;\n}\nfor(var j in arr2){\n    console.log(j);\n}</code></pre>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">2、冒泡排序（每一趟找出最大的）</span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">//性能一般\nvar arr=[1,5,7,9,16,2,4];\n//冒泡排序,每一趟找出最大的,总共比较次数为arr.length-1次,每次的比较次数为arr.length-1次，依次递减\nvar temp;\nfor(var i=0;i&lt;arr.length-1;i++){\n    for(var j=0;j&lt;arr.length-1;j++){\n        if(arr[j]&gt;arr[j+1]){\n            temp=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp;\n        }\n    }\n}</code></pre>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">3、选择排序（假定某个位置的值是最小值）</span></span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">//性能一般\nvar arr=[1,23,5,8,11,78,45];\nvar temp;\nfor(var i=0;i&lt;arr.length-1;i++){\n    for(var j=i+1;j&lt;arr.length;j++){\n        if(arr[i]&gt;arr[j]){\n            temp=arr[i];\n            arr[i]=arr[j];\n            arr[j]=temp;\n        }\n    }\n}</code></pre>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">4、快速排序（一拆为二）</span></span></span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">function quickSort(arr){\n    if(arr.length &lt;= 1){\n        return arr;\n    }\n    var left = [];\n    var right = [];\n    var midIndex = parseInt(arr.length / 2);\n    var mid = arr[midIndex];\n    for(var i = 0 ; i &lt; arr.length ; i++){\n        if(i == midIndex) continue;\n        if( arr[i] &lt; mid){\n            left.push(arr[i])\n        }else{\n            right.push(arr[i]);\n        }\n    }\n    return quickSort(left).concat([mid],quickSort(right));\n}\n \n[1,2].concat([3],[4,5]);   //[1, 2, 3, 4, 5]</code></pre>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">5、插入排序</span></span></span></span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">var arr=[45,1,32,21,56,87,43,12,34,45];\n    for(var i=0;i&lt;arr.length;i++){\n    var n=i;\n    while(arr[n]&gt;arr[n+1] &amp;&amp; n&gt;=0){\n \t    var temp=arr[n];\n\t    arr[n]=arr[n+1];\n \t    arr[n+1]=temp;\n\t    n--;\n    }\n}</code></pre>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">6、希尔排序（性能最好的排序）</span></span></span></span></span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">function xier(arr){\n    var interval = parseInt(arr.length / 2);  //分组间隔设置\n    while(interval &gt; 0){\n        for(var i = 0 ; i &lt; arr.length ; i ++){\n            var n = i;\n            while(arr[n] &lt; arr[n - interval] &amp;&amp; n &gt; 0){\n                var temp = arr[n];\n                arr[n] = arr[n - interval];\n                arr[n - interval] = temp;\n                n = n - interval;\n            }\n        }\n        interval = parseInt(interval / 2);\n    }\n    return arr;\n}\nxier([12,9,38,44,7,98,35,59,49,88,38]);</code></pre>\n<p><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: bold; overflow-wrap: break-word; color: #4d4d4d; font-family: 'Microsoft YaHei', 'SF Pro Display', Roboto, Noto, Arial, 'PingFang SC', sans-serif; font-size: 18px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">7、sort排序</span></span></span></span></span></span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">//一维数组排序\nvar arr=[1,5,7,9,16,2,4];\narr.sort(function(a,b){\n    return b-a;  //降序排列，return a-b; &mdash;&gt;升序排列\n})  //括号里不写回调函数，则默认按照字母逐位升序排列，结果为[1,16,2,4,5,7,9]</code></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">//对象数组排序\nvar arr = [\n    {name:'syy',age:0},\n    {name:'wxy',age:18},\n    {name:'slj',age:8},\n    {name:'wj',age:20}\n];\n \nfunction compare(property){\n    return function(a,b){\n        var value1 = a[property];\n        var value2 = b[property];\n        return value1 - value2;//升序,降序为value2 - value1\n    }\n}\narr.sort(compare('age'))</code></pre>"},{"id":3,"body":"<h1 style=\"margin: 0px 0px 16px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; color: #404040; text-rendering: optimizelegibility; font-size: 26px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">ES6类（Class）基本用法</h1>\n<p><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">JavaScript</span></span><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">语言的传统方法是通过构造函数,定义并生成新对象,</span></span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">prototype</span></span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">&nbsp;属性使您有能力向对象添加属性和方法。下面是通过传统的方式创建和使用对象的案例:</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Person.js  \nfunction Person(x,y){  \n    this.x = x;  \n    this.y = y;  \n}  \n  \nPerson.prototype.toString = function (){  \n    return (this.x + \"的年龄是\" +this.y+\"岁\");  \n}  \nexport {Person};  \n//index.js  \nimport {Person} from './Person';  \nlet person = new Person('张三',12);  \nconsole.log(person.toString());&lt;/span&gt;</code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">ES6引入了</span></span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">Class</span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">（类）这个概念,作为对象的模板,通过</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">Class</span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">关键字,可以定义类。基本上,ES6的</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">Class</span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">可以看作只是一个语法糖,它的绝大部分功能,ES5都可以做到,新的</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">Class</span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。上面的代码用ES6的&ldquo;类&rdquo;改写,就是下面这样。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Person.js  \nclass Person{  \n    // 构造  \n    constructor(x,y){  \n        this.x = x;  \n        this.y = y;  \n    }  \n    toString(){  \n        return (this.x + \"的年龄是\" +this.y+\"岁\");  \n    }  \n}  \nexport {Person};  \n//index.js  \nimport {Person} from './Person';  \nlet person = new Person('张三',12);  \nconsole.log(person.toString());&lt;/span&gt;  </code></pre>\n<p style=\"text-align: left;\"><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">上面代码定义了一个&ldquo;类&rdquo;,可以看到里面有一个</span></span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">constructor</span></span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">方法,这就是构造方法,而this关键字则代表实例对象。也就是说,ES5的构造函数</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">Person</span></span><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">,对应ES6的</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">Person</span><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">类的构造方法。</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">Person</span><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">类除了构造方法,还定义了一个</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">toString</span></span><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">方法。注意,定义&ldquo;类&rdquo;的方法的时候,前面不需要加上</span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">function</span></span><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">这个关键字,直接把函数定义放进去了就可以了。另外,方法之间不需要逗号分隔。</span></p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<p style=\"text-align: left;\"><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">ES6的类,完全可以看作构造函数的另一种写法。</span></span></p>\n<p style=\"text-align: left;\">&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Person.js  \nconsole.log(typeof Person);//function  \nconsole.log(Person === Person.prototype.constructor);//true&lt;/span&gt;  </code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">上面代码表明,类的数据类型就是函数,类本身就指向构造函数。</span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Person.js  \nconsole.log(Person.prototype);//输出的是一个对象&lt;/span&gt;  </code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">构造函数的</span></span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">prototype</code></strong></span></strong></span></strong></span></strong></span></strong></strong></strong><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">属性,在ES6的&ldquo;类&rdquo;上面继续存在。事实上,类的所有方法都定义在类的</span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">prototype</code></strong></span></strong></span></strong></span></strong></span></strong></strong></strong><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">属性上面,通过以下方式可是覆盖类中的方法,当然定义类的时候也可以通过这个方式添加方法。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//index.js  \nPerson.prototype = {  \n    getName(){  \n        return '张三';  \n    },  \n    getAge(){  \n        return '12';  \n    }  \n};&lt;/span&gt;  </code></pre>\n<p><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">Object.assign</span></span><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">方法可以给对象</span></span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">Person</code></strong></span></strong></span></strong></span></strong></span></strong></strong></strong><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">动态的增加方法,而</span></span><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, Courier New, monospace;\"><span style=\"font-size: 16.2px;\">Person.prototype = {}</span></span><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">Person.prototype = {}是覆盖对象的方法,或者在初始化的时候添加方法。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//index.js  \nObject.assign(Person.prototype,{  \n    getWidth(){  \n        console.log('12');  \n    },  \n    getHeight(){  \n        console.log('24');  \n    }  \n});  \nconsole.log(Person.prototype);&lt;/span&gt;  </code></pre>\n<p><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">toString</code></strong></span></strong></span></strong></span></strong></span></strong></strong></strong><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">方法是</span></strong></span></strong></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">Person</code></strong></span></strong></span></strong></span></strong></span></strong></strong></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">类内部定义的方法，ES6中它是不可枚举的,这一点与ES5的行为不一致,ES5是可以枚举的。</span></strong></span></strong></strong></strong></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//index.js  \n//ES5  \nconsole.log(Object.keys(Person.prototype));//[\"toString\", \"getWidth\", \"getHeight\"]  \nconsole.log(Object.getOwnPropertyNames(Person.prototype));//[\"constructor\", \"toString\", \"getWidth\", \"getHeight\"]  \n  \n//ES6  \nconsole.log(Object.keys(Person.prototype));//[\"getWidth\", \"getHeight\"]  \nconsole.log(Object.getOwnPropertyNames(Person.prototype));//[\"constructor\", \"toString\", \"getWidth\", \"getHeight\"]&lt;/span&gt;  </code></pre>\n<p><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">Object.keys（obj）</code></strong></span></strong></span></strong>，返回一个数组，数组里是该obj可被枚举的所有属性。</span></strong></span></strong></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">Object.getOwnPropertyNames(obj)</code></strong></span></strong></span></strong></span></strong></span></strong></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><strong><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">，返回一个数组，数组里是该obj上所有的实例属性。</span></strong></span></strong></strong></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">在ES6中,类的属性名可以使用表达式,具体实现方式如下</span></strong></span></strong></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Article.js  \nlet methodName = \"getTitle\";  \nexport default class Article{  \n    [methodName](){  \n        console.log('输出文章的标题1');  \n    }  \n}  \n//index.js  \nimport Article from './Article';  \n//console.log(Article.prototype);  \nlet article = new Article();  \narticle.getTitle()&lt;/span&gt;  </code></pre>\n<p><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">constructor</code></strong>方法是类的构造函数是默认方法，通过new命令生成对象实例时，自动调用该方法。一个类必须有constructor方法，如果没有显式定义，一个默认的constructor方法会被添加。所以即使你没有添加构造函数,也是有默认的构造函数的。一般<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">constructor</code></strong></span></strong></span></strong>方法默认返回实例对象</span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">this</code></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">，但是也可以指定<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">constructor</code></strong></span></strong></span></strong>方法返回一个全新的对象,让返回的实例对象不是该类的实例。</span></strong></span></strong></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//ConstructorStu.js  \nimport Article from './Article';  \nexport default class ConstructorStu{  \n    // 构造  \n    constructor() {  \n        console.log('constructor');  \n        return new Article();  \n    }  \n}  \n//index.js  \nimport ConstructorStu from './ConstructorStu';  \nconsole.log('==111==');  \nconsole.log(new ConstructorStu() instanceof ConstructorStu);//false  \nconsole.log('==222==');  \nlet cons =  new ConstructorStu();  \nconsole.log('==333==');  \ncons.constructor();  \nconsole.log('==444==');  \n运行结果  \n==111==  \nconstructor  \nfalse  \n==222==  \nconstructor  \n==333==  \n==444==&lt;/span&gt;</code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">说明:类的构造函数，不使用</span></span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">new</code></strong></span></strong></span></strong><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">是没法调用的,即使你使用实例对象去调用也是不行的,这是它跟普通构造函数的一个主要区别。</span></span><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">实例的属性除非显式定义在其本身（即定义在</span></span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">this</code></strong></span></strong></span></strong><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">对象上），否则都是定义在原型上（即定义在</span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">class</code></strong></span></strong></span></strong><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">上)。</span></span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">hasOwnProperty()</code></strong></span></strong></span></strong><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">函数用于指示一个对象自身(不包括原型链)是否具有指定名称的属性。如果有，返回</span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">true</code></strong></span></strong></span></strong><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">，否则返回</span><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">false</code></strong></span></strong></span></strong><span style=\"font-size: 18px; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\">。</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Article.js  \nlet methodName = \"getTitle\";  \nexport default class Article{  \n    [methodName](){  \n        console.log('输出文章的标题1');  \n    }  \n}  \n//index.js  \nimport Article from './Article';  \n//console.log(Article.prototype);  \nlet article = new Article();  \narticle.getTitle()&lt;/span&gt;  </code></pre>\n<p><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">constructor</code></strong>方法是类的构造函数是默认方法，通过new命令生成对象实例时，自动调用该方法。一个类必须有constructor方法，如果没有显式定义，一个默认的constructor方法会被添加。所以即使你没有添加构造函数,也是有默认的构造函数的。一般<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">constructor</code></strong></span></strong></span></strong>方法默认返回实例对象</span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">this</code></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">，但是也可以指定<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">constructor</code></strong></span></strong></span></strong>方法返回一个全新的对象,让返回的实例对象不是该类的实例。</span></strong></span></strong></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//Person.js  \nclass Person{  \n    // 构造  \n    constructor(x,y){  \n        this.x = x;  \n        this.y = y;  \n    }  \n  \n    toString(){  \n        return (this.x + \"的年龄是\" +this.y+\"岁\");  \n    }  \n}  \n  \nlet person = new Person('lis',8);  \nconsole.log(person.toString());  \nconsole.log(person.hasOwnProperty('x'));//true  \nconsole.log(person.hasOwnProperty('y'));//true  \nconsole.log(person.hasOwnProperty('toString'));//false  \nconsole.log(person.__proto__.hasOwnProperty('toString'));//true&lt;/span&gt;   </code></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style-type: none; list-style-image: none; overflow-wrap: break-word;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">说明:上面结果说明对象上有</span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">x</code></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">,</span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">y</code></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">属性,但是没有</span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">toString</code></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">属性。也就是说<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">x</code></strong></span></strong></span></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">,<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">y</code></strong></span></strong></span></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">是定义在<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">this</code></strong></span></strong></span></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">对象上,<strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><code style=\"font-weight: 400; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">toString</code></strong></span></strong></span></strong></span></strong></span></strong><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\"><strong style=\"color: #444444; font-family: Tahoma, Arial, Helvetica, sans-serif; font-size: 14px; background-color: #ffffff;\"><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; font-weight: 400;\">定义在类上。<br /><br /></span></strong></span></strong></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;let person1 = new Person('张三',12);  \nlet person2 = new Person('李四',13);  \nconsole.log(person1.__proto__ === person2.__proto__);//true&lt;/span&gt; </code></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style-type: none; list-style-image: none; overflow-wrap: break-word;\"><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px; white-space: normal;\">类的所有实例共享一个原型对象,person1和person2都是Person的实例,它们的原型都是Person.prototype，所以__proto__属性是相等的。这也意味着，可以通过实例的__proto__属性为Class添加方法<br /><br /></span></span></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;let person1 = new Person('张三',12);  \nlet person2 = new Person('李四',13);  \nperson1.__proto__.getH = function (){  \n    return \"Height\";  \n};  \nconsole.log(person1.getH());  \nconsole.log(person2.getH());&lt;/span&gt;</code></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style-type: none; list-style-image: none; overflow-wrap: break-word;\"><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px; white-space: normal;\"><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px; white-space: normal;\">上面代码在person1的原型上添加了一个getH方法，由于person1的原型就是person2的原型，因此person2也可以调用这个方法。而且，此后新建的实例person3也可以调用这个方法。这意味着，使用实例的__proto__属性改写原型，必须相当谨慎，不推荐使用，因为这会改变Class的原始定义，影响到所有实例。<br /><br />class不存在变量提升,需要先定义再使用,因为ES6不会把类的声明提升到代码头部,但是ES5就不一样,ES5存在变量提升,可以先使用,然后再定义。<br /><br /></span></span></span></span></pre>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">&lt;span style=\"font-size:18px;\"&gt;//正确  \nnew A();  \nfunction A(){  \n  \n}//ES5可以先使用再定义,存在变量提升  \n//错误  \nnew B();  \nclass B{  \n  \n}//B is not a constructor  \n//ES6不能先使用再定义,不存在变量提升&lt;/span&gt;  </code></pre>\n<p><a title=\"https://www.cnblogs.com/yuwenjing0727/p/7872616.html\" href=\"https://www.cnblogs.com/yuwenjing0727/p/7872616.html\" target=\"_blank\" rel=\"noopener\">参考文档https://www.cnblogs.com/yuwenjing0727/p/7872616.html</a></p>"},{"id":4,"body":"<h1 style=\"margin: 0px 0px 16px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; color: #404040; text-rendering: optimizelegibility; font-size: 26px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">异步操作Promise</h1>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise 对象有以下两个特点。</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">（1）对象的状态不受外界影响。Promise 对象代表一个异步操作，有三种状态：Pending（进行中）、Resolved（已完成，又称 Fulfilled）和 Rejected（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。这也是 Promise 这个名字的由来，它的英语意思就是「承诺」，表示其他手段无法改变。</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">（2）一旦状态改变，就不会再变，任何时候都可以得到这个结果。Promise 对象的状态改变，只有两种可能：从 Pending 变为 Resolved 和从 Pending 变为 Rejected。只要这两种情况发生，状态就凝固了，不会再变了，会一直保持这个结果。就算改变已经发生了，你再对 Promise 对象添加回调函数，也会立即得到这个结果。这与事件（Event）完全不同，事件的特点是，如果你错过了它，再去监听，是得不到结果的。</span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">var promise = new Promise(function(resolve, reject) {\n if (/* 异步操作成功 */){\n resolve(value);\n } else {\n reject(error);\n }\n});\n\npromise.then(function(value) {\n // success\n}, function(value) {\n // failure\n});</code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise 构造函数接受一个函数作为参数，该函数的两个参数分别是 resolve 方法和 reject 方法。</span></span></p>\n<p>&nbsp;</p>\n<h2 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 24px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">基本的 api</h2>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise.resolve()</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise.reject()</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise.prototype.then()</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise.prototype.catch()</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">&nbsp;</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise.all() // 所有的完成</span></span></p>\n<p>&nbsp;</p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">Promise.race() // 竞速，完成一个即可</span></span></p>\n<p>&nbsp;</p>\n<h2 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 24px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">进阶</h2>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">1. 封装同步与异步代码</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">```\nnew Promise(function (resolve, reject) {\nresolve(someValue);\n});\n```\n写成\n\n```\nPromise.resolve(someValue);\n```</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">2. 捕获同步异常</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\"> new Promise(function (resolve, reject) {\n throw new Error('悲剧了，又出 bug 了');\n }).catch(function(err){\n console.log(err);\n });</code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">如果是同步代码，可以写成</span></span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">Promise.reject(new Error(\"什么鬼\"));</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">3. 多个异常捕获，更加精准的捕获</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">somePromise.then(function() {\n return a.b.c.d();\n}).catch(TypeError, function(e) {\n //If a is defined, will end up here because\n //it is a type error to reference property of undefined\n}).catch(ReferenceError, function(e) {\n //Will end up here if a wasn't defined at all\n}).catch(function(e) {\n //Generic catch-the rest, error wasn't TypeError nor\n //ReferenceError\n});</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">4. 获取两个 Promise 的返回值</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">1. .then 方式顺序调用\n2. 设定更高层的作用域\n3. spread</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">5. finally</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">任何情况下都会执行的，一般写在 catch 之后</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">6. bind</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">somethingAsync().bind({})\n.spread(function (aValue, bValue) {\n this.aValue = aValue;\n this.bValue = bValue;\n return somethingElseAsync(aValue, bValue);\n})\n.then(function (cValue) {\n    return this.aValue + this.bValue + cValue;\n});</code></pre>\n<p><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">如果是同步代码，可以写成</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">var scope = {};\nsomethingAsync()\n.spread(function (aValue, bValue) {\n scope.aValue = aValue;\n scope.bValue = bValue;\n return somethingElseAsync(aValue, bValue);\n})\n.then(function (cValue) {\n return scope.aValue + scope.bValue + cValue;\n});</code></pre>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">然而，这有非常多的区别，</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">你必须先声明，有浪费资源和内存泄露的风险</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">不能用于放在一个表达式的上下文中</span></span></p>\n<p><span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px;\">效率更低</span></span></p>\n<p>&nbsp;</p>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">7. all。非常用于于处理一个动态大小均匀的 Promise 列表</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">var p = Promise.all([p1,p2,p3]);</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">8. join。非常适用于处理多个分离的 Promise</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">```\nvar join = Promise.join;\njoin(getPictures(), getComments(), getTweets(),\nfunction(pictures, comments, tweets) {\nconsole.log(\"in total: \" + pictures.length + comments.length + tweets.length);\n});\n```</code></pre>\n<h4 style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: #404040; text-rendering: optimizelegibility; font-size: 20px; font-family: -apple-system, BlinkMacSystemFont, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: #ffffff;\">9. props。处理一个 promise 的 map 集合。只有有一个失败，所有的执行都结束</h4>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"background-color: transparent; border-radius: 0px; padding: 0px; box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; color: inherit; white-space: pre-wrap;\">```\nPromise.props({\npictures: getPictures(),\ncomments: getComments(),\ntweets: getTweets()\n}).then(function(result) {\nconsole.log(result.tweets, result.pictures, result.comments);\n});\n```</code></pre>\n<p><a title=\"https://www.jianshu.com/p/063f7e490e9a\" href=\"https://www.jianshu.com/p/063f7e490e9a\" target=\"_blank\" rel=\"noopener\">参考文档https://www.jianshu.com/p/063f7e490e9a</a></p>\n<p><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\"></code></p>"},{"id":5,"body":"<p>模板引擎</p>"}],"vue":[{"id":1,"body":"<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-1. 钩子函数;</h1>\n<p><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">beforeRouteLeave</span></code>在组件内部使用，离开当前页面的时候触发<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\">to</code><span style=\"color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px; background-color: #ffffff;\">到哪里去 </span><span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">from</span><span style=\"background-color: #ffffff; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\"> 当前路由&nbsp;</span><span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px;\">next</span><span style=\"background-color: #ffffff; color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 18px;\">&nbsp;回调是否继续往下执行</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">beforeRouteLeave(to, from, next) {<br />  alert('确认离开当前页面')<br />  next()<br />}</code><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"></code></pre>\n<p>&nbsp;</p>\n<p><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">  beforeRouteUpdate</span></code>在组件内部使用，参数发生变化的时候触发例如：同一个页面，参数不同，当然也可以使用<span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; white-space: pre-wrap;\">watch</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">beforeRouteUpdata(to, from, next) {<br /> <br />  next()<br />}</code></pre>\n<h1 class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">&nbsp;</h1>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-2. 路由配置;</h1>\n<p>&nbsp;</p>\n<p><span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; white-space: pre-wrap;\">非懒加载</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">import Vue from \"vue\"<br />import Router from \"vue-router\"<br />import </span>HelloWorld from \"@/components/HelloWorld\"<br /><span style=\"white-space: pre-wrap;\"><br />const router = [<br />  {path: \"/HelloWorld\",component: </span>HelloWorld}<br />];<br />export default router<code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\"></code></pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; white-space: pre-wrap; background-color: #f9f2f4;\"> 懒加载</span></p>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">import Vue from \"vue\"<br />import Router from \"vue-router\"</span><br /><span style=\"white-space: pre-wrap;\"><br />const router = [<br />  {path: \"/HelloWorld\",component: </span>resolve=&gt;require([\"@/components/HelloWorld\"],resolve)}<br />];<br /><br />export default router </pre>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-3. 路由对象;</h1>\n<h1 class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">srollBehavior</span></code><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: medium;\">&nbsp;通过路由来初始化滚动条</span></h1>\n<p>&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><span style=\"white-space: pre-wrap;\">import Router from \"vue-router\"<br />const option = [ </span>{path: \"/HelloWorld\",component: resolve=&gt;require([\"@/components/HelloWorld\"],resolve)} ];<br /><span style=\"white-space: pre-wrap;\">const router = new </span>Router({<br />  option,<br />  scrollBehavior(to,from,savedPosition) {<br />    if(savedPosition) {// 是否通过浏览器的返回、前进按钮、router.go()<br />      return savedPosition<br />    } else {// 否则将滚动条初始化<br />      return {x: 0 ,y: 0 }<br />    }<br />})</pre>\n<p>&nbsp;</p>\n<h1 class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\"><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\"> router.addRouters </span></code><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: medium;\">&nbsp;动态添加路由</span></h1>\n<p style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: medium;\">&nbsp;</p>\n<pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 9.5px; text-size-adjust: 100%; box-sizing: border-box; font-size: 14px; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; line-height: 1.42857; color: #333333; word-break: break-all; overflow-wrap: break-word; background-color: #f5f5f5; border: 1px solid #cccccc; border-radius: 4px;\"><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">const routeOpt = router.options.routers.concat([</code>{path: \"/HelloWorld\",component: HelloWorld}])<br /><code class=\"scss\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: inherit; padding: 0px; color: inherit; background-color: transparent; border-radius: 0px; white-space: pre-wrap;\">router.addRouters(</code>routeOpt )</pre>"},{"id":2,"body":"<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-1. Axios拦截;</h1>\n<p><span style=\"font-family: 'Helvetica Neue', Helvetica, STHeiTi, 'Microsoft YaHei'; font-size: 14px;\">新建 </span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">request.js</span></code> 对后端api接口进行封装 如下：</p>\n<p>&nbsp;</p>\n<div style=\"color: #f8f8f2; background-color: #272822; font-family: Consolas, 'Courier New', monospace; font-size: 14px; line-height: 19px; white-space: pre; width: 600px;\">\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">import</span>&nbsp;axios&nbsp;<span style=\"color: #f92672;\">from</span>&nbsp;<span style=\"color: #e6db74;\">\"axios\"</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">const</span>&nbsp;<span style=\"color: #ae81ff;\">httpServer</span>&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;axios.<span style=\"color: #a6e22e;\">create</span>({</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;baseURL<span style=\"color: #f92672;\">:</span>&nbsp;process.env.<span style=\"color: #ae81ff;\">VUE_APP_PROJET_API</span>,<span style=\"color: #88846f;\">//&nbsp;接口api&nbsp;地址</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeout<span style=\"color: #f92672;\">:</span>&nbsp;<span style=\"color: #ae81ff;\">40000</span>,</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;})</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #88846f;\">//&nbsp;请求拦截</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;httpServer.interceptors.request.<span style=\"color: #a6e22e;\">use</span>(<span style=\"color: #fd971f; font-style: italic;\">config</span><span style=\"color: #66d9ef; font-style: italic;\">=&gt;</span>{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.headers[<span style=\"color: #e6db74;\">\"device\"</span>]&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;<span style=\"color: #e6db74;\">\"PC\"</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.headers[<span style=\"color: #e6db74;\">'token'</span>]&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;<span style=\"color: #e6db74;\">\"\"</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">return</span>&nbsp;config</div>\n<div>&nbsp;&nbsp;&nbsp;})</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #88846f;\">//&nbsp;响应拦截</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;httpServer.interceptors.response.<span style=\"color: #a6e22e;\">use</span>(<span style=\"color: #fd971f; font-style: italic;\">response</span><span style=\"color: #66d9ef; font-style: italic;\">=&gt;</span>{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">const</span>&nbsp;<span style=\"color: #ae81ff;\">data</span>&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;response.data</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">if</span>(data.status_code&nbsp;<span style=\"color: #f92672;\">===</span>&nbsp;<span style=\"color: #ae81ff;\">200</span>)&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">return</span>&nbsp;data</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<span style=\"color: #f92672;\">else</span>&nbsp;<span style=\"color: #f92672;\">if</span>(data.status_code&nbsp;<span style=\"color: #f92672;\">===</span>&nbsp;<span style=\"color: #ae81ff;\">400</span>){</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #a6e22e;\">alert</span>(data.message)</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">return</span>&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">Promise</span>.<span style=\"color: #a6e22e;\">reject</span>(data.message)</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span style=\"color: #f92672;\">else</span>&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">return</span>&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">Promise</span>.<span style=\"color: #a6e22e;\">reject</span>(data.message)</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;},<span style=\"color: #fd971f; font-style: italic;\">error</span><span style=\"color: #66d9ef; font-style: italic;\">=&gt;</span>{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #a6e22e; text-decoration-line: underline;\">console</span>.<span style=\"color: #66d9ef;\">log</span>(error)</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">return</span>&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">Promise</span>.<span style=\"color: #a6e22e;\">reject</span>(error)</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;})</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">export</span>&nbsp;<span style=\"color: #fd971f;\">default</span> httpServer</div>\n</div>\n<h1 class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">&nbsp;</h1>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-2. API封装;</h1>\n<p>&nbsp;</p>\n<p><span style=\"font-family: 'Helvetica Neue', Helvetica, STHeiTi, 'Microsoft YaHei'; font-size: 14px;\">对后端&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">api</span></code> 进行封装 新建&nbsp;<span style=\"background-color: #f9f2f4; color: #c7254e; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; white-space: pre-wrap;\">api.js</span></p>\n<p>&nbsp;</p>\n<div style=\"color: #f8f8f2; background-color: #272822; font-family: Consolas, 'Courier New', monospace; font-size: 14px; line-height: 19px; white-space: pre; width: 600px;\">\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">import</span>&nbsp;request&nbsp;<span style=\"color: #f92672;\">from</span>&nbsp;<span style=\"color: #e6db74;\">\"./request\"</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">const</span>&nbsp;<span style=\"color: #ae81ff;\">config</span>&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetSite<span style=\"color: #f92672;\">:</span>&nbsp;<span style=\"color: #e6db74;\">\"/api/type/list\"</span>,<span style=\"color: #88846f;\">// api地址</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetData<span style=\"color: #f92672;\">:</span>&nbsp;<span style=\"color: #e6db74;\">\"/api/getData\"</span>,</div>\n<div>&nbsp;&nbsp;}</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">let</span>&nbsp;exports&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;<span style=\"color: #f92672;\">new</span>&nbsp;<span style=\"color: #a6e22e; text-decoration-line: underline;\">Object</span>()</div>\n<div><span style=\"color: #88846f;\"> // 循环暴露出多个API</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">for</span>(<span style=\"color: #66d9ef; font-style: italic;\">var</span>&nbsp;k&nbsp;<span style=\"color: #f92672;\">in</span>&nbsp;config){</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">let</span>&nbsp;url&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;config[k]</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exports[k]&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">function</span>&nbsp;(<span style=\"color: #fd971f; font-style: italic;\">data</span>,<span style=\"color: #fd971f; font-style: italic;\">type</span>){</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">return</span>&nbsp;<span style=\"color: #a6e22e;\">request</span>({</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url<span style=\"color: #f92672;\">:</span>&nbsp;url,<span style=\"color: #88846f;\">// api地址</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method<span style=\"color: #f92672;\">:</span>&nbsp;type&nbsp;<span style=\"color: #f92672;\">?</span>&nbsp;type&nbsp;<span style=\"color: #f92672;\">:</span>&nbsp;<span style=\"color: #e6db74;\">\"post\"</span>&nbsp;,<span style=\"color: #88846f;\">// 请求方式</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data<span style=\"color: #88846f;\">// 参数</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;}</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #f92672;\">export</span>&nbsp;<span style=\"color: #fd971f;\">default</span>&nbsp;exports</div>\n<div>-------------------------</div>\n<div style=\"padding-left: 10px;\">min.js 全局引入</div>\n<div><span style=\"color: #f92672;\"> import</span>&nbsp;http&nbsp;<span style=\"color: #f92672;\">from</span>&nbsp;<span style=\"color: #e6db74;\">'@/util/api.js'</span></div>\n<div style=\"line-height: 19px;\">\n<div style=\"padding-left: 10px;\">Vue.prototype.$http <span style=\"color: #f92672;\">=</span> http</div>\n</div>\n</div>\n<h1 class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">&nbsp;</h1>\n<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-2. 全局使用;</h1>\n<div style=\"color: #f8f8f2; background-color: #272822; font-family: Consolas, 'Courier New', monospace; font-size: 14px; line-height: 19px; white-space: pre; width: 600px;\">\n<div><span style=\"color: #fd971f;\"> this</span>.$http.<span style=\"color: #a6e22e;\">GetSite</span>().<span style=\"color: #a6e22e;\">then</span>(<span style=\"color: #fd971f; font-style: italic;\">res</span><span style=\"color: #66d9ef; font-style: italic;\">=&gt;</span>{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;}).<span style=\"color: #a6e22e;\">catch</span>(()<span style=\"color: #66d9ef; font-style: italic;\">=&gt;</span>{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;})</div>\n</div>"},{"id":5,"body":"<h1 id=\"a2\" class=\"title font anchor\" style=\"margin: 20px 0px 10px; padding: 0px; text-size-adjust: 100%; box-sizing: border-box; font-size: 36px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-weight: 500; line-height: 1.1; color: #333333; background-color: #ffffff;\">1-1. 安装 postcss-pxtorem;</h1>\n<p><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">npm install postcss-pxtorem --save</span></code>&nbsp;<span style=\"color: #333333; font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\"><span style=\"font-size: 18px; background-color: #ffffff;\">安装命令&nbsp; 找到&nbsp;</span><span style=\"font-size: 18px;\">.postcssrc.js&nbsp;</span></span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">.postcssrs.js</span></code> 配置如下：</p>\n<p>&nbsp;</p>\n<div style=\"color: #f8f8f2; background-color: #272822; font-family: Consolas, 'Courier New', monospace; font-size: 14px; line-height: 19px; white-space: pre; width: 700px;\">\n<div>&nbsp;&nbsp;module.exports&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"plugins\"</span><span style=\"color: #f92672;\">:</span>&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"postcss-import\"</span><span style=\"color: #f92672;\">:</span>&nbsp;{},</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"postcss-url\"</span><span style=\"color: #f92672;\">:</span>&nbsp;{},</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"autoprefixer\"</span><span style=\"color: #f92672;\">:</span>&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;browsers<span style=\"color: #f92672;\">:</span>&nbsp;[<span style=\"color: #e6db74;\">'Android&nbsp;&gt;=&nbsp;4.0'</span>,&nbsp;<span style=\"color: #e6db74;\">'iOS&nbsp;&gt;=&nbsp;7'</span>]</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"postcss-pxtorem\"</span><span style=\"color: #f92672;\">:</span>&nbsp;{&nbsp;</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"rootValue\"</span><span style=\"color: #f92672;\">:</span> <span style=\"color: #ae81ff;\">32</span>,<span style=\"color: #88846f;\">//&nbsp;&nbsp;根字号</span></div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #e6db74;\">\"propList\"</span><span style=\"color: #f92672;\">:</span>&nbsp;[<span style=\"color: #e6db74;\">\"*\"</span>]</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div>\n<div>&nbsp;&nbsp;&nbsp;}</div>\n<div>}<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> </span></div>\n</div>\n<p>&nbsp;</p>\n<p><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 16.2px; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; border-radius: 4px;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit; white-space: pre-wrap;\">min.js</span></code>&nbsp;设置根字号：</p>\n<p>&nbsp;</p>\n<div style=\"color: #f8f8f2; background-color: #272822; font-family: Consolas, 'Courier New', monospace; font-size: 14px; line-height: 19px; white-space: pre; width: 700px;\">\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">function</span>&nbsp;<span style=\"color: #a6e22e;\">setRem</span>()&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp; <span style=\"color: #66d9ef; font-style: italic;\">const</span>&nbsp;<span style=\"color: #ae81ff;\">scale</span>&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;document.documentElement.clientWidth&nbsp;<span style=\"color: #f92672;\">/</span> <span style=\"color: #ae81ff;\">750</span></div>\n<div>&nbsp;&nbsp;&nbsp; document.documentElement.style.fontSize <span style=\"color: #f92672;\">=</span>&nbsp;(<span style=\"color: #ae81ff;\">32</span>&nbsp;<span style=\"color: #f92672;\">*</span>&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">Math</span>.<span style=\"color: #66d9ef;\">min</span>(scale,&nbsp;<span style=\"color: #ae81ff;\">2</span>))&nbsp;<span style=\"color: #f92672;\">+</span>&nbsp;<span style=\"color: #e6db74;\">'px'</span></div>\n<div>&nbsp;&nbsp;&nbsp; window.size <span style=\"color: #f92672;\">=</span> <span style=\"color: #ae81ff;\">750</span><span style=\"color: #f92672;\">/</span>document.documentElement.clientWidth</div>\n<div>&nbsp;&nbsp;&nbsp;}</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #a6e22e;\">setRem</span>()</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;window.<span style=\"color: #a6e22e;\">onresize</span>&nbsp;<span style=\"color: #f92672;\">=</span>&nbsp;<span style=\"color: #66d9ef; font-style: italic;\">function</span>()&nbsp;{</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #a6e22e;\">setRem</span>()</div>\n<div>&nbsp;&nbsp;&nbsp;&nbsp;}</div>\n</div>"},{"id":9,"body":"<p>常用的生命周期</p>"},{"id":3,"body":"<p>vueConfig.js</p>"},{"id":4,"body":"<h2 id=\"安装\" style=\"line-height: 1.25; font-size: 1.65rem; padding-bottom: 0.3rem; border-bottom: 1px solid #eaecef; margin-top: -3.1rem; padding-top: 4.6rem; margin-bottom: 0px; color: #2c3e50; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\">1-1安装&nbsp; &nbsp;npm install --save vuescroll</h2>\n<p style=\"line-height: 1.7; color: #2c3e50; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; font-size: 16px;\">&nbsp;</p>\n<p style=\"line-height: 1.7; color: #2c3e50; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; font-size: 16px;\">在你的入口文件处、或者局部引入：</p>\n<div class=\"language-javascript extra-class\" style=\"position: relative; background-color: #282c34; border-radius: 6px; color: #2c3e50; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif; font-size: 16px; width: 500px;\">\n<pre class=\"language-javascript\" style=\"color: #cccccc; background-color: transparent; line-height: 1.4; padding: 1.25rem 1.5rem; margin-top: 0.85rem; margin-bottom: 0.85rem; border-radius: 6px; position: relative; z-index: 1;\"><code style=\"font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace; color: #ffffff; padding: 0px; margin: 0px; font-size: 0.85em; background-color: transparent; border-radius: 0px;\"><span class=\"token keyword\" style=\"color: #cc99cd;\">import</span> Vue <span class=\"token keyword\" style=\"color: #cc99cd;\">from</span> <span class=\"token string\" style=\"color: #7ec699;\">'vue'</span><span class=\"token punctuation\" style=\"color: #cccccc;\">;</span>\n<span class=\"token keyword\" style=\"color: #cc99cd;\">import</span> vuescroll <span class=\"token keyword\" style=\"color: #cc99cd;\">from</span> <span class=\"token string\" style=\"color: #7ec699;\">'vuescroll'</span><span class=\"token punctuation\" style=\"color: #cccccc;\">;</span></code></pre>\n</div>\n<p>API地址：<a href=\"https://vuescrolljs.yvescoding.org/zh/\" target=\"_blank\" rel=\"noopener\">https://vuescrolljs.yvescoding.org/zh/</a></p>"},{"id":7,"body":"<p>extend</p>"}],"html":[{"id":1,"body":"html 基本用法"},{"id":2,"body":"<p>postmessage 交互</p>"},{"id":3,"body":"<p>header</p>"}],"ndoe":[{"id":1,"body":"ndoe 基本用法"},{"id":2,"body":"<p>router</p>"},{"id":3,"body":"<p>fs</p>"},{"id":4,"body":"<p>mongoDB</p>"}],"webpack":[{"id":1,"body":"webpack 基本用法"}],"canvas":[{"id":1,"body":"<p>测试新增列表</p>"},{"id":2,"body":"<p>画圆</p>"}]}